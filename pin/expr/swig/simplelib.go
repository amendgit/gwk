/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

package simplelib



import _ "runtime/cgo"
import "unsafe"

type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

//extern simplelibSwigCgocall
func SwigCgocall()
//extern simplelibSwigCgocallDone
func SwigCgocallDone()
//extern simplelibSwigCgocallBack
func SwigCgocallBack()
//extern simplelibSwigCgocallBackDone
func SwigCgocallBackDone()

type SwigcptrStringVector uintptr

func (p SwigcptrStringVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringVector) SwigIsStringVector() {
}

func _swig_wrap_new_StringVector__SWIG_0() SwigcptrStringVector

func NewStringVector__SWIG_0() StringVector {
	return _swig_wrap_new_StringVector__SWIG_0()
}

func _swig_wrap_new_StringVector__SWIG_1(int) SwigcptrStringVector

func NewStringVector__SWIG_1(arg1 int) StringVector {
	return _swig_wrap_new_StringVector__SWIG_1(arg1)
}

func NewStringVector(a ...interface{}) StringVector {
	argc := len(a)
	if argc == 0 {
		return NewStringVector__SWIG_0()
	}
	if argc == 1 {
		return NewStringVector__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_StringVector_size(SwigcptrStringVector) int

func (arg1 SwigcptrStringVector) Size() int {
	return _swig_wrap_StringVector_size(arg1)
}

func _swig_wrap_StringVector_capacity(SwigcptrStringVector) int

func (arg1 SwigcptrStringVector) Capacity() int {
	return _swig_wrap_StringVector_capacity(arg1)
}

func _swig_wrap_StringVector_reserve(SwigcptrStringVector, int)

func (arg1 SwigcptrStringVector) Reserve(arg2 int) {
	_swig_wrap_StringVector_reserve(arg1, arg2)
}

func _swig_wrap_StringVector_isEmpty(SwigcptrStringVector) bool

func (arg1 SwigcptrStringVector) IsEmpty() bool {
	return _swig_wrap_StringVector_isEmpty(arg1)
}

func _swig_wrap_StringVector_clear(SwigcptrStringVector)

func (arg1 SwigcptrStringVector) Clear() {
	_swig_wrap_StringVector_clear(arg1)
}

func _swig_wrap_StringVector_add(SwigcptrStringVector, string)

func (arg1 SwigcptrStringVector) Add(arg2 string) {
	_swig_wrap_StringVector_add(arg1, arg2)
}

func _swig_wrap_StringVector_get(SwigcptrStringVector, int) string

func (arg1 SwigcptrStringVector) Get(arg2 int) string {
	return _swig_wrap_StringVector_get(arg1, arg2)
}

func _swig_wrap_StringVector_set(SwigcptrStringVector, int, string)

func (arg1 SwigcptrStringVector) Set(arg2 int, arg3 string) {
	_swig_wrap_StringVector_set(arg1, arg2, arg3)
}

func _swig_wrap_delete_StringVector(uintptr)

func DeleteStringVector(arg1 StringVector) {
	_swig_wrap_delete_StringVector(arg1.Swigcptr())
}

type StringVector interface {
	Swigcptr() uintptr
	SwigIsStringVector()
	Size() int
	Capacity() int
	Reserve(arg2 int)
	IsEmpty() bool
	Clear()
	Add(arg2 string)
	Get(arg2 int) string
	Set(arg2 int, arg3 string)
}

type SwigcptrByteVector uintptr

func (p SwigcptrByteVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrByteVector) SwigIsByteVector() {
}

func _swig_wrap_new_ByteVector__SWIG_0() SwigcptrByteVector

func NewByteVector__SWIG_0() ByteVector {
	return _swig_wrap_new_ByteVector__SWIG_0()
}

func _swig_wrap_new_ByteVector__SWIG_1(int) SwigcptrByteVector

func NewByteVector__SWIG_1(arg1 int) ByteVector {
	return _swig_wrap_new_ByteVector__SWIG_1(arg1)
}

func NewByteVector(a ...interface{}) ByteVector {
	argc := len(a)
	if argc == 0 {
		return NewByteVector__SWIG_0()
	}
	if argc == 1 {
		return NewByteVector__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_ByteVector_size(SwigcptrByteVector) int

func (arg1 SwigcptrByteVector) Size() int {
	return _swig_wrap_ByteVector_size(arg1)
}

func _swig_wrap_ByteVector_capacity(SwigcptrByteVector) int

func (arg1 SwigcptrByteVector) Capacity() int {
	return _swig_wrap_ByteVector_capacity(arg1)
}

func _swig_wrap_ByteVector_reserve(SwigcptrByteVector, int)

func (arg1 SwigcptrByteVector) Reserve(arg2 int) {
	_swig_wrap_ByteVector_reserve(arg1, arg2)
}

func _swig_wrap_ByteVector_isEmpty(SwigcptrByteVector) bool

func (arg1 SwigcptrByteVector) IsEmpty() bool {
	return _swig_wrap_ByteVector_isEmpty(arg1)
}

func _swig_wrap_ByteVector_clear(SwigcptrByteVector)

func (arg1 SwigcptrByteVector) Clear() {
	_swig_wrap_ByteVector_clear(arg1)
}

func _swig_wrap_ByteVector_add(SwigcptrByteVector, byte)

func (arg1 SwigcptrByteVector) Add(arg2 byte) {
	_swig_wrap_ByteVector_add(arg1, arg2)
}

func _swig_wrap_ByteVector_get(SwigcptrByteVector, int) byte

func (arg1 SwigcptrByteVector) Get(arg2 int) byte {
	return _swig_wrap_ByteVector_get(arg1, arg2)
}

func _swig_wrap_ByteVector_set(SwigcptrByteVector, int, byte)

func (arg1 SwigcptrByteVector) Set(arg2 int, arg3 byte) {
	_swig_wrap_ByteVector_set(arg1, arg2, arg3)
}

func _swig_wrap_delete_ByteVector(uintptr)

func DeleteByteVector(arg1 ByteVector) {
	_swig_wrap_delete_ByteVector(arg1.Swigcptr())
}

type ByteVector interface {
	Swigcptr() uintptr
	SwigIsByteVector()
	Size() int
	Capacity() int
	Reserve(arg2 int)
	IsEmpty() bool
	Clear()
	Add(arg2 byte)
	Get(arg2 int) byte
	Set(arg2 int, arg3 byte)
}

type SwigcptrSimpleClass uintptr

func (p SwigcptrSimpleClass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSimpleClass) SwigIsSimpleClass() {
}

func _swig_wrap_SimpleClass_hello(SwigcptrSimpleClass) string

func (arg1 SwigcptrSimpleClass) Hello() string {
	return _swig_wrap_SimpleClass_hello(arg1)
}

func _swig_wrap_SimpleClass_helloString(SwigcptrSimpleClass, uintptr)

func (arg1 SwigcptrSimpleClass) HelloString(arg2 StringVector) {
	_swig_wrap_SimpleClass_helloString(arg1, arg2.Swigcptr())
}

func _swig_wrap_SimpleClass_helloBytes(SwigcptrSimpleClass, uintptr)

func (arg1 SwigcptrSimpleClass) HelloBytes(arg2 ByteVector) {
	_swig_wrap_SimpleClass_helloBytes(arg1, arg2.Swigcptr())
}

func _swig_wrap_SimpleClass_GetWindow(SwigcptrSimpleClass)

func (arg1 SwigcptrSimpleClass) GetWindow() {
	_swig_wrap_SimpleClass_GetWindow(arg1)
}

func _swig_wrap_delete_SimpleClass(uintptr)

func DeleteSimpleClass(arg1 SimpleClass) {
	_swig_wrap_delete_SimpleClass(arg1.Swigcptr())
}

type SimpleClass interface {
	Swigcptr() uintptr
	SwigIsSimpleClass()
	Hello() string
	HelloString(arg2 StringVector)
	HelloBytes(arg2 ByteVector)
	GetWindow()
}

type SwigcptrSimpleClassB uintptr

func (p SwigcptrSimpleClassB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSimpleClassB) SwigIsSimpleClassB() {
}

func _swig_wrap_new_SimpleClassB() SwigcptrSimpleClassB

func NewSimpleClassB() SimpleClassB {
	return _swig_wrap_new_SimpleClassB()
}

func _swig_wrap_delete_SimpleClassB(uintptr)

func DeleteSimpleClassB(arg1 SimpleClassB) {
	_swig_wrap_delete_SimpleClassB(arg1.Swigcptr())
}

type SimpleClassB interface {
	Swigcptr() uintptr
	SwigIsSimpleClassB()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

